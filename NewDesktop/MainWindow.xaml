<Window x:Class="NewDesktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:views1="clr-namespace:NewDesktop.Views"
        xmlns:viewModels="clr-namespace:NewDesktop.ViewModels"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        Left="0" Top="0"
        Width="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}}"
        Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}"
        AllowDrop="True" Background="Transparent">
    <!-- Background="Transparent" Width="1200" Height="800" WindowStyle="None" AllowsTransparency="True" -->

    <!-- 业务逻辑绑定 -->
    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>

    <Grid Background="#02FFFFFF">
        <!-- 显示 -->
        <ListView ItemsSource="{Binding Icons}"
                  Style="{StaticResource CustomListViewStyle}"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding }"
                  dd:DragDrop.UseDefaultDragAdorner="True"
                  dd:DragDrop.UseDefaultEffectDataTemplate="True" Background="Transparent"
                  >
            <!-- dd:DragDrop.DragHandler="{Binding }" -->
            
            
            
            
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonUp">
                    <i:InvokeCommandAction 
                        Command="{Binding RightClickCommand}"
                        CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            
            
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas  Background="Transparent"/><!-- Canvas布局容器 -->
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource CustomListViewItemStyle}">
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}"/>
                    
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.Resources>
                <DataTemplate DataType="{x:Type viewModels:IconModel}">
                    <views1:IconView Width="64" Height="80"/><!-- Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}" -->
                </DataTemplate>
            </ListView.Resources>
            <!-- -->
            <!-- <ItemsControl.ItemTemplate> -->
            <!--     <DataTemplate DataType="{x:Type vm:IconModel}"> -->
            <!--         <Border Background="#FFFFE0B2" Margin="2" Width="70" Height="30"> -->
            <!--             <TextBlock Text="{Binding Name}" Margin="5"/> -->
            <!--         </Border> -->
            <!--     </DataTemplate> -->
            <!-- </ItemsControl.ItemTemplate> -->
        </ListView>

        <ItemsControl ItemsSource="{Binding Entities}">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/><!-- Canvas布局容器 -->
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type viewModels:BoxModel}">
                    <views1:BoxView/>
                    <!-- Canvas.Left="{Binding X}" Canvas.Top="{Binding Y}" -->
                </DataTemplate>
            </ItemsControl.Resources>

        </ItemsControl>

        <!-- 操作面板 -->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="10">
            <Button Content="新建桌面盒子" Command="{Binding AddShelfCommand}" Margin="10,0"/>
            <Button Content="添加桌面图标" Command="{Binding AddProductCommand}"  Margin="10,0"/>
            <Button Content="保存布局" Command="{Binding ExportLayoutCommand}" CommandParameter="layout.json" Margin="10,0"/>
            <Button Content="加载布局" Command="{Binding ImportLayoutCommand}" CommandParameter="layout.json" Margin="10,0"/>
            <Button Content="Box设置" Command="{Binding OpenBoxSettingsCommand}" Margin="10,0"/>
        </StackPanel>
    </Grid>
</Window>